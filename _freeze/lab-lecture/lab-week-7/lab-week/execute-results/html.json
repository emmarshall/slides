{
  "hash": "20687673a894527b147f8e4fc1397c61",
  "result": {
    "markdown": "---\ntitle: A Title for Slides\nsubtitle: A subtitle\nfrom: markdown+emoji\nformat: \n  unl-revealjs:\n    incremental: true\nauthor:\n  - name: Emma Marshall, JD, MA\n    affiliations: University of Nebraska-Lincoln\ndate: last-modified\n---\n\n\n\n\n## Yaml Options\n\n-   Slides will proceed incrementally\n-   Allows use of [emoji's](https://github.com/markdown-templates/markdown-emojis)\n\n``` yaml\ntitle: A Title for Slides\nsubtitle: A subtitle\nfrom: markdown+emoji\nformat: \n  unl-revealjs:\n    incremental: true\nauthor:\n  - name: Emma Marshall, JD, MA\n    affiliations: University of Nebraska-Lincoln\ndate: last-modified\n```\n\n## Can override deault options\n\n::: nonincremental\n-   Not incremental\n-   Just a list\n:::\n\n## Make side-by-side columns\n\n::: columns\n::: {.column width=\"40%\"}\nLeft column ![](fitz.png){.center}\n:::\n\n::: {.column width=\"60%\"}\nRight column ![](fitz.png){.center}\n:::\n:::\n\n## Slide with a pause\n\ncontent before the pause\n\n. . .\n\ncontent after the pause\n\n## Boxes [1]{.circle}\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n::: cream-box\nCentered box :corn: To make a point or whatever\n:::\n:::\n\n::: {.column width=\"50%\"}\n::: red-box\nCentered box :corn: To make a point or whatever\n:::\n:::\n:::\n\n## [Example 1]{.example} :corn: Here is how I can tell a story {auto-animate=\"true\" auto-animate-easing=\"ease-in-out\"}\n\n::: info-box\nhello\n:::\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\n## Bullets\n\nWhen you click the **Render** button a document will be generated that includes:\n\n-   Content authored with markdown\n-   Output from executable code\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\n## Too much content? {.scrollable}\n\n::: nonincremental\nWhen you have a lot of content on a slide you can make off-slide content available by:\n\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n-   Making the slide `scrollable`\n:::\n\nHi! ![](fitz.png)\n\n## Too much content? {.tiny}\n\n::: nonincremental\nOr you could just make the content smaller:\n\n-   Making the slide `smaller`\n-   Making the slide `smaller`\n-   Making the slide `smaller`\\\n-   Making the slide `smaller`\n-   Making the slide `smaller`\n-   Making the slide `smaller`\n-   Making the slide `smaller`\n-   Making the slide `smaller`\\\n:::\n\nHi! ![](fitz.png){width=\"50\"}\n\n## Sizing options\n\n-   `.huge` - font-size: 200%\n-   `.extra-large` - font-size: 150%\n-   `.large` - font-size: 130%\n-   `.medium` - font-size: 115%\n-   `.small` - font-size: 70%\n-   `.tiny` - font-size: 50%\n\n## Set absolute position for content\n\n![](fitz.png){.absolute top=\"200\" left=\"0\" width=\"250\" height=\"300\"}\n\n![](fitz.png){.absolute top=\"50\" right=\"50\" width=\"200\" height=\"250\"}\n\n![](fitz.png){.absolute bottom=\"0\" right=\"50\" width=\"300\" height=\"300\"}\n\n## Or animate with `.r-stack`\n\n::: r-stack\n![](fitz.png){.fragment width=\"200\" height=\"300\"}\n\n![](fitz.png){.fragment width=\"450\" height=\"450\"}\n\n![](fitz.png){.fragment width=\"400\" height=\"400\"}\n:::\n\n## This will be centered {.center}\n\nThis text is moved as well\n\n## Slide Title\n\nHere is an image:\n\n![](fitz.png){.r-stretch}\n\nSome text after the image.\n\n## Code\n\nWhen you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\nYou can also add `text marked as code`!\n\n# New topic!\n\n## Tabset example {#sec-summary}\n\n::: panel-tabset\n## Example 1\n\nContent here for tabset 1 :)\n\n## Example 2\n\nMore content here, for tabset 2 :)\n:::\n\n## Numbers\n\n1.  **thing 1**\n2.  *thing 2*\n3.  ~~thing 3~~\n4.  ~~thing 4~~\n\n## Non-Incremental lists\n\n::: nonincremental\n-   **thing 1**\n-   *thing 2*\n-   ~~thing 3~~\n:::\n\n## You can add R code\n\n\n::: {.cell}\n\n:::\n\n\n## :bar_chart: And show results as graph or chart \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ng \n```\n\n::: {.cell-output-display}\n![](lab-week_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## What about tables? {.small}\n\n### `knitr::kable()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ntab <- starwars |>\n  tidyr::drop_na(species) |> \n  group_by(species) |>\n  summarise(\n    n = n(),\n    mean_heigth = round(mean(height, na.rm = TRUE)),\n    mean_mass = round(mean(mass, na.rm = TRUE))\n  ) |> \n  slice_max(order_by = n, n = 4) \n\nknitr::kable(tab)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|species  |  n| mean_heigth| mean_mass|\n|:--------|--:|-----------:|---------:|\n|Human    | 35|         177|        83|\n|Droid    |  6|         131|        70|\n|Gungan   |  3|         209|        74|\n|Kaminoan |  2|         221|        88|\n|Mirialan |  2|         168|        53|\n|Twi'lek  |  2|         179|        55|\n|Wookiee  |  2|         231|       124|\n|Zabrak   |  2|         173|        80|\n:::\n:::\n\n:::\n:::\n\n## Diagrams with Mermaid!\n\n<center>Create using [Mermaid live editor](https://mermaid.live/edit#pako:eNpVjk2Lg0AMhv9KyGkL9Q94WGh1t5fCFurN6SFo7AztfDBGpKj_fcd62c0pvM_zhkzY-JYxx-7px0ZTFKhK5SDNoS50NL1Y6m-QZZ_ziQWsd_ya4fhx8tBrH4Jx993mH1cJium8agyijXssGyre_R_HM5T1mYL4cPtLqtHP8FWbi07n_xMdObW-647yjrKGIhQU3wru0XK0ZNr0_rQmCkWzZYV5WlvuaHiKQuWWpNIg_vpyDeYSB97jEFoSLg3dI9ktXH4B_cJWqw)</center>\n\n## Example slide\n\n### This is a subtitle\n\nHere we have some text that may run over several lines of the slide frame, depending on how long it is.\n\n-   first item\n    -   A sub item\n\nNext, we'll brief review some theme-specific components.\n\n## Additional theme classes {.small}\n\n### Some extra things you can do with the clean theme\n\nSpecial classes for emphasis\n\n-   `.alert` class for default emphasis, e.g. [important note]{.alert}.\n-   `.fg` class for custom color, e.g. [important note]{.fg}.\n-   `.bg` class for custom background, e.g. [important note]{.bg style=\"--col: #e64173\"}.\n-   `.bg` class for custom background, e.g. [important note]{.bg}.\n\nCross-references - `.button` class provides a Beamer-like button, e.g. [[Summary](#sec-summary)]{.button}\n\n## Fragments\n\nthe details for slide animations are in the section called [Fragments](https://quarto.org/docs/presentations/revealjs/advanced.html#fragments)\n\n<br><br>\n\n::: {.fragment .fade-in}\n::: {.fragment .highlight-red}\n::: {.fragment .strike}\n::: {.fragment .semi-fade-out}\nFade in \\> turn green \\> strike \\> fade out\n:::\n:::\n:::\n:::\n\n------------------------------------------------------------------------\n\n::: r-fit-text\n[can customize text]{style=\"color: hotpink;\"}\n:::\n\n## Backgroud image {background-image=\"fitz.png\" background-opacity=\"0.2\"}\n\nThis slide's background image will be sized to 100px and repeated.\n\n## Slide Title {background-color=\"aquamarine\"}\n\n## Exporting into PDF\n\nYou can use the function `pagedown::chrome_print()` to print the HTML version into a PDF!\n\n``` r\npagedown::chrome_print(\"path-to-file.html\")\n```\n",
    "supporting": [
      "lab-week_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}