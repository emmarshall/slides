{
  "hash": "bfad2647bb83457e345901b94884ae68",
  "result": {
    "markdown": "---\ntitle: A Title for Slides\nsubtitle: A subtitle\nfrom: markdown+emoji\nformat: unl-revealjs\nauthor:\n  - name: Emma Marshall, JD, MA\n    affiliations: University of Nebraska-Lincoln\ndate: last-modified\n---\n\n\n\n\n## Boxes [1]{.circle} \n\n<br>\n\n::: columns\n\n::: {.column width=\"50%\"}\n::: cream-box\nCentered box\n:corn: \nTo make a point or whatever\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: red-box\nCentered box\n:corn: \nTo make a point or whatever\n:::\n:::\n:::\n\n## [Example 1]{.example} :corn: Here is how I can tell a story {auto-animate=true auto-animate-easing=\"ease-in-out\"}\n\n::: info-box\nhello \n:::\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished presentation.\nTo learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\n\n\n## Bullets\n\nWhen you click the **Render** button a document will be generated that includes:\n\n-   Content authored with markdown\n-   Output from executable code\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\n## Code\n\nWhen you click the **Render** button a presentation will be generated that includes both content and the output of embedded code.\nYou can embed code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::\n\n\n> This is part of the [Quarto documentation](https://quarto.org/docs/presentations/).\n\nYou can also add `text marked as code`!\n\n\n# New topic!\n\n\n## Tabset example {#sec-summary}\n\n::: panel-tabset\n## Example 1\n\nContent here for tabset 1 :)\n\n## Example 2\n\nMore content here, for tabset 2 :)\n:::\n\n## Incremental content\n\n\n*Animate Stuff*\n\n. . .\n\n\nUse `. . .` to separate content as an incremental slide!\n\n. . .\n\nBye!\n\n## Numbers\n\n1. **thing 1**\n1. *thing 2*\n1. ~~thing 3~~\n1. ~~thing 4~~\n\n## Non-Incremental lists\n\n::: {.nonincremental}\n- **thing 1**\n- *thing 2*\n- ~~thing 3~~\n::: \n\n## You can add R code\n\n\n::: {.cell}\n\n:::\n\n\n## And show the results, as well :)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ng \n```\n\n::: {.cell-output-display}\n![](unl-themes_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## What about tables? {.small}\n\n### `knitr::kable()`\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ntab <- starwars |>\n  tidyr::drop_na(species) |> \n  group_by(species) |>\n  summarise(\n    n = n(),\n    mean_heigth = round(mean(height, na.rm = TRUE)),\n    mean_mass = round(mean(mass, na.rm = TRUE))\n  ) |> \n  slice_max(order_by = n, n = 4) \n\nknitr::kable(tab)\n```\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n|species  |  n| mean_heigth| mean_mass|\n|:--------|--:|-----------:|---------:|\n|Human    | 35|         177|        83|\n|Droid    |  6|         131|        70|\n|Gungan   |  3|         209|        74|\n|Kaminoan |  2|         221|        88|\n|Mirialan |  2|         168|        53|\n|Twi'lek  |  2|         179|        55|\n|Wookiee  |  2|         231|       124|\n|Zabrak   |  2|         173|        80|\n:::\n:::\n\n:::\n:::\n\n## Diagrams with Mermaid!\n<center>\nCreate using [Mermaid live editor](https://mermaid.live/edit#pako:eNpVjk2Lg0AMhv9KyGkL9Q94WGh1t5fCFurN6SFo7AztfDBGpKj_fcd62c0pvM_zhkzY-JYxx-7px0ZTFKhK5SDNoS50NL1Y6m-QZZ_ziQWsd_ya4fhx8tBrH4Jx993mH1cJium8agyijXssGyre_R_HM5T1mYL4cPtLqtHP8FWbi07n_xMdObW-647yjrKGIhQU3wru0XK0ZNr0_rQmCkWzZYV5WlvuaHiKQuWWpNIg_vpyDeYSB97jEFoSLg3dI9ktXH4B_cJWqw)\n</center>\n\n\n## Example slide \n\n### This is a subtitle\n\nHere we have some text that may run over several lines of the slide frame,\ndepending on how long it is.\n\n- first item \n    - A sub item\n\nNext, we'll brief review some theme-specific components.\n\n## Additional theme classes {.small}\n\n### Some extra things you can do with the clean theme\n\nSpecial classes for emphasis\n\n- `.alert` class for default emphasis, e.g. [important note]{.alert}.\n- `.fg` class for custom color, e.g. [important note]{.fg}.\n- `.bg` class for custom background, e.g. [important note]{.bg style=\"--col: #e64173\"}.\n- `.bg` class for custom background, e.g. [important note]{.bg}.\n\nCross-references\n- `.button` class provides a Beamer-like button, e.g.\n[[Summary]{.button}](#sec-summary)\n\n## Fragments\n\nthe details for slide animations are in the section called [Fragments](https://quarto.org/docs/presentations/revealjs/advanced.html#fragments)\n\n<br><br>\n::: {.fragment}\nFade in\n:::\n\n::: {.fragment .fade-out}\nFade out\n:::\n\n::: {.fragment .highlight-red}\nHighlight red\n:::\n\n::: {.fragment .fade-in-then-out}\nFade in, then out\n:::\n\n::: {.fragment .fade-up}\nSlide up while fading in\n:::\n\n----\n\n::: r-fit-text\n[can customize text]{style=\"color: hotpink;\"}\n:::\n\n## .image-right\n\n::: columns\n::: {.column width=\"45%\"}\nWe can use the `.image-right` and `.image-left` classes to insert images in the background\n\nThese images will be placed behind most other content\n:::\n:::\n\n![](fitz.png){.image-right}\n\n## .image-left {style=\"text-align: right;\"}\n\n::: columns\n::: {.column width=\"55%\"}\n:::\n::: {.column width=\"45%\"}\nIt is therefore recommened that you use [multiple columns](https://quarto.org/docs/presentations/index.html#multiple-columns) to only have text on the background area\n:::\n:::\n\n![](fitz.png){.image-left}\n\n## Exporting into PDF\n\nYou can use the function `pagedown::chrome_print()` to print the HTML version into a PDF!\n\n```r\npagedown::chrome_print(\"path-to-file.html\")\n```",
    "supporting": [
      "unl-themes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}